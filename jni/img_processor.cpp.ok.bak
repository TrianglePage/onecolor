#include<jni.h>
#include<android/log.h>
#include<opencv2/opencv.hpp>

#define TAG    "jni_opencv" // 这个是自定义的LOG的标识
#define LOGD(...)  __android_log_print(ANDROID_LOG_DEBUG,TAG,__VA_ARGS__) // 定义LOGD类型

using namespace cv;

extern "C" {
JNIEXPORT jintArray JNICALL Java_com_puzzleworld_onecolor_ProcessActivity_ImgFun(
		JNIEnv* env, jobject obj, jintArray buf, int w, int h, int value);
JNIEXPORT jintArray JNICALL Java_com_puzzleworld_onecolor_ProcessActivity_ImgFun(
		JNIEnv* env, jobject obj, jintArray buf, int w, int h, int value) {
	jint *cbuf;
	cbuf = env->GetIntArrayElements(buf, NULL);
	if (cbuf == NULL) {
		return 0;
	}
	LOGD("kevin jni value = %d", value);

	Mat imgData(h, w, CV_8UC4, (unsigned char*) cbuf);

	uchar* ptr = imgData.ptr(0);
	for (int i = 0; i < w * h; i++) {
		int grayScale = (int) (ptr[4 * i + 2] * 0.299 + ptr[4 * i + 1] * 0.587
				+ ptr[4 * i + 0] * 0.114);
		ptr[4 * i + 1] = grayScale;
		ptr[4 * i + 2] = grayScale;
		ptr[4 * i + 0] = grayScale;
	}

	int size = w * h;
	jintArray result = env->NewIntArray(size);
	env->SetIntArrayRegion(result, 0, size, cbuf);
	env->ReleaseIntArrayElements(buf, cbuf, 0);
	return result;
}
}
